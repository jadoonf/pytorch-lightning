name: Docs builds
true:
  pull_request:
    branches:
    - master
    - release/*
    paths:
    - .actions/*
    - .github/workflows/docs-build.yml
    - requirements/ci.txt
    - docs/**
    - _notebooks
    - requirements/**
    - src/lightning/fabric/**
    - src/lightning_fabric/*
    - src/lightning/pytorch/**
    - src/pytorch_lightning/*
    - setup.py
    - pyproject.toml
    - '!*.md'
    - '!**/*.md'
    types:
    - opened
    - reopened
    - ready_for_review
    - synchronize
  push:
    branches:
    - master
    - release/*
    tags:
    - '*'
  workflow_dispatch:
    inputs:
      checkout:
        default: ''
        description: checkout specific git state
        required: false
        type: string
      version:
        description: specify a version / tag to be uploaded
        required: true
        type: string
concurrency:
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.head_ref }}
defaults:
  run:
    shell: bash
env:
  FREEZE_REQUIREMENTS: '1'
  PYPI_CACHE_DIR: _pip-wheels
  PYPI_LOCAL_DIR: pypi_pkgs/
  TORCH_URL: https://download.pytorch.org/whl/cpu/torch_stable.html
jobs:
  deploy-docs:
    env:
      GCP_TARGET: gs://lightning-docs-${{ matrix.pkg-name }}
      VERSION: ${{ inputs.version || github.ref_name }}
    if: github.repository_owner == 'Lightning-AI' && github.event_name != 'pull_request'
    needs: docs-make
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - uses: listendev/action@v0.11
      with:
        ci: only
        jwt: ${{ secrets.LSTN }}
    - uses: actions/download-artifact@v3
      with:
        name: docs-${{ matrix.pkg-name }}-${{ github.sha }}
        path: docs/build/html/
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCS_SA_KEY }}
    - name: Setup gcloud
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GCS_PROJECT }}
    - if: startsWith(github.ref, 'refs/heads/release/') && github.event_name == 'push'
      name: "Upload docs/${{ matrix.pkg-name }}/stable to GCS \U0001FAA3"
      run: gsutil -m rsync -d -R docs/build/html/ ${GCP_TARGET}/stable
    - if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      name: "Upload docs/${{ matrix.pkg-name }}/latest to GCS \U0001FAA3"
      run: gsutil -m rsync -d -R docs/build/html/ ${GCP_TARGET}/latest
    - if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
      name: "Upload docs/${{ matrix.pkg-name }}/release to GCS \U0001FAA3"
      run: gsutil -m rsync -d -R docs/build/html/ ${GCP_TARGET}/${{ env.VERSION }}
    - if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
      name: "Upload docs as archive to GCS \U0001FAA3"
      run: 'zip ${{ env.VERSION }}.zip -r html/

        gsutil cp ${{ env.VERSION }}.zip ${GCP_TARGET}

        '
      working-directory: docs/build
    strategy:
      fail-fast: false
      matrix:
        pkg-name:
        - fabric
        - pytorch
  docs-make:
    env:
      ARTIFACT_DAYS: 0
      DOCS_COPY_NOTEBOOKS: 1
      PIN_RELEASE_VERSIONS: 1
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v4
      with:
        lfs: ${{ matrix.pkg-name == 'pytorch' }}
        ref: ${{ inputs.checkout }}
        submodules: ${{ matrix.pkg-name == 'pytorch' }}
    - uses: listendev/action@v0.11
      with:
        ci: only
        jwt: ${{ secrets.LSTN }}
    - uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    - if: ${{ matrix.pkg-name == 'pytorch' }}
      name: List notebooks
      run: 'pip install -q py-tree

        py-tree .notebooks/

        ls -lhR .notebooks/

        '
      working-directory: _notebooks/
    - name: Pull sphinx template
      run: 'pip install -q -r requirements/ci.txt

        aws s3 sync --no-sign-request s3://sphinx-packages/ ${PYPI_LOCAL_DIR}

        pip install lai-sphinx-theme -U -f ${PYPI_LOCAL_DIR}

        '
    - name: pip wheels cache
      uses: actions/cache/restore@v4
      with:
        key: pypi_wheels
        path: ${{ env.PYPI_CACHE_DIR }}
    - if: ${{ matrix.pkg-name == 'pytorch' }}
      name: Install pandoc & texlive
      run: 'sudo apt-get update --fix-missing

        sudo apt-get install -y pandoc

        '
      timeout-minutes: 5
    - name: Install package & dependencies
      run: "mkdir -p ${PYPI_CACHE_DIR}  # in case cache was not hit\nls -lh ${PYPI_CACHE_DIR}\n\
        pip install .[all] -U -r requirements/${{ matrix.pkg-name }}/docs.txt \\\n\
        \  -f ${PYPI_LOCAL_DIR} -f ${PYPI_CACHE_DIR} -f ${TORCH_URL}\npip list\n"
      timeout-minutes: 20
    - if: matrix.pkg-name == 'pytorch'
      name: Install req. for Notebooks/tutorials
      run: pip install -q -r _notebooks/.actions/requires.txt
      timeout-minutes: 10
    - if: github.event_name != 'pull_request'
      name: Full build for deployment
      run: echo "DOCS_FETCH_ASSETS=1" >> $GITHUB_ENV
    - if: github.event_name != 'workflow_dispatch'
      name: Build without warnings
      run: echo "BUILD_SPHINX_OPTS=-W --keep-going" >> $GITHUB_ENV
    - continue-on-error: ${{ (matrix.target == 'doctest' || matrix.target == 'linkcheck')
        && github.event_name == 'workflow_dispatch' }}
      name: Make ${{ matrix.target }}
      run: make ${{ matrix.target }} --debug --jobs $(nproc) SPHINXOPTS="$BUILD_SPHINX_OPTS"
      working-directory: ./docs/source-${{ matrix.pkg-name }}
    - if: github.event_name == 'pull_request'
      name: Keep artifact
      run: echo "ARTIFACT_DAYS=7" >> $GITHUB_ENV
    - if: ${{ matrix.target == 'html' }}
      name: Upload built docs
      uses: actions/upload-artifact@v3
      with:
        include-hidden-files: true
        name: docs-${{ matrix.pkg-name }}-${{ github.sha }}
        path: docs/build/html/
        retention-days: ${{ env.ARTIFACT_DAYS }}
    strategy:
      fail-fast: false
      matrix:
        pkg-name:
        - fabric
        - pytorch
        target:
        - html
        - doctest
        - linkcheck
